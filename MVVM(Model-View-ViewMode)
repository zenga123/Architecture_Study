모델(Model): 데이터와 비즈니스 로직을 담당합니다.
뷰(View): 사용자 인터페이스(UI)를 처리합니다.
뷰 모델(ViewModel): 모델과 뷰 사이를 중개하여 데이터를 전달하고, 뷰의 이벤트를 모델에 반영합니다.

이런 구조 덕분에 각 컴포넌트가 독립적으로 관리될 수 있어, 코드의 유지보수성과 테스트가 용이해지는 장점이 있음.

또한 데이터 바인딩 기능을 통해 뷰와 뷰 모델 간의 동기화를 쉽게 할 수 있기 때문에 앱 개발에서 많이 사용됨.

예를 들어, 사용자가 화면의 버튼을 클릭하면 뷰가 해당 이벤트를 뷰 모델에 전달하고, 뷰 모델은 필요한 데이터 처리를 위해 모델에 요청한 후 그 결과를 다시 뷰에 전달하여 UI를 업데이트하는 방식으로 동작.
